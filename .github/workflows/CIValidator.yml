name: Validation pull request CI

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
      - run: chmod +x ./gradlew
      - run: gradle clean assemble
      - uses: actions/upload-artifact@v3
        with:
          name: compiledClass
          path: build/

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Test with Gradle
        uses: gradle/gradle-build-action@v2
      - run: chmod +x ./gradlew
      - run: gradle test
      - uses: actions/upload-artifact@v3
        with:
          name: test
          path: build/

  sonarqube:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v3
        with:
          name: test
          path: build/

      - name: Display structure of downloaded files
        run: ls
      #- name: build gradle for sonar
      #  uses: gradle/gradle-build-action@v2
      #- run: chmod +x ./gradlew
      #- run: gradle build
      - run: ls
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.PROJECT_NAME }}
            -Dsonar.coverage.exclusions=**/src/test/**,**/model/**,**Application.java,**/config/**,**/util/SecretReader.java
            -Dsonar.java.binaries=build
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: "Show SonarQube Quality Gate Status value"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
